name: Frontend Service Deploy
on:
  workflow_dispatch:
    inputs:
      helm_command:
        description: "install/upgrade/rollback"
        required: True
env:
    helm_command: ${{ inputs.helm_command}}

jobs:
  Verify-Deployment-Dev:
    name: 'Verify Dev Deployment: Frontend Service'
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Dev'
    environment:
     name: Dev_Env
    steps:

    - name: Download Artifacts
      uses: dawidd6/action-download-artifact@v8
      with:
        workflow: frontend_ci.yaml
        github_token: ${{ github.token }}
        repo: ${{ github.repository }}
        name: Application-Artifacts
        path: Application-Artifacts

    - name: Environment
      run: |
          echo "${{ secrets.PROJECT_ID }}"
          echo "${{ vars.GKE_CLUSTER_NAME }}"

    - name: Application Frontend
      run: |
          if [[ ${{ inputs.helm_command}} == "install" ]]
          then 
            echo "helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "upgrade" ]]
          then
            echo "helm upgrade frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "rollback" ]]
          then
            echo "helm rollback frontend --debug --dry-run VERSION_NUMBER"
          else 
            echo "Wrong input" 
          fi 

    # - name: Install Helm
    #   run: |
    #       curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    #       sudo apt-get install apt-transport-https --yes
    #       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    #       sudo apt-get update
    #       sudo apt-get install helm -y 
    #       helm version

    # # Setup gcloud CLI
    # - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
    #   with:
    #     service_account_key: ${{ secrets.GKE_SA_KEY }}
    #     project_id: ${{ vars.PROJECT_ID }}
    
    # # Get the GKE credentials so we can deploy to the cluster
    # - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
    #   with:
    #     cluster_name: ${{ vars.GKE_CLUSTER_NAME }}
    #     location: ${{ vars.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # - name: Deploy Frontend Application
    #   run: |
    #      helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend


  Verify-Deployment-Test:
    name: 'Verify Test Deployment: Frontend Service'
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Test'
    environment:
     name: Test_Env
    steps:

    - name: Download Artifacts
      uses: dawidd6/action-download-artifact@v8
      with:
        workflow: frontend_ci.yaml
        github_token: ${{ github.token }}
        repo: ${{ github.repository }}
        name: Application-Artifacts
        path: Application-Artifacts

    - name: Environment
      run: |
          echo "${{ secrets.PROJECT_ID }}"
          echo "${{ vars.GKE_CLUSTER_NAME }}"

    - name: Application Frontend
      run: |
          if [[ ${{ inputs.helm_command}} == "install" ]]
          then 
            echo "helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "upgrade" ]]
          then
            echo "helm upgrade frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "rollback" ]]
          then
            echo "helm rollback frontend --debug --dry-run VERSION_NUMBER"
          else 
            echo "Wrong input" 
          fi 

    # - name: Install Helm
    #   run: |
    #       curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    #       sudo apt-get install apt-transport-https --yes
    #       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    #       sudo apt-get update
    #       sudo apt-get install helm -y 
    #       helm version
    
    # # Setup gcloud CLI
    # - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
    #   with:
    #     service_account_key: ${{ secrets.GKE_SA_KEY }}
    #     project_id: ${{ vars.PROJECT_ID }}
    
    # # Get the GKE credentials so we can deploy to the cluster
    # - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
    #   with:
    #     cluster_name: ${{ vars.GKE_CLUSTER_NAME }}
    #     location: ${{ vars.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # - name: Deploy Frontend Application
    #   run: |
    #      helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend

  Verify-Deployment-Prod:
    name: 'Verify Prod Deployment: Frontend Service'
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Prod'
    environment:
     name: Prod_Env
    steps:

    - name: Download Artifacts
      uses: dawidd6/action-download-artifact@v8
      with:
        workflow: frontend_ci.yaml
        github_token: ${{ github.token }}
        repo: ${{ github.repository }}
        name: Application-Artifacts
        path: Application-Artifacts

    - name: Environment
      run: |
          echo "${{ secrets.PROJECT_ID }}"
          echo "${{ vars.GKE_CLUSTER_NAME }}"

    - name: Application Frontend
      run: |
          if [[ ${{ inputs.helm_command}} == "install" ]]
          then 
            echo "helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "upgrade" ]]
          then
            echo "helm upgrade frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "rollback" ]]
          then
            echo "helm rollback frontend --debug --dry-run VERSION_NUMBER"
          else 
            echo "Wrong input" 
          fi 

    # - name: Install Helm
    #   run: |
    #       curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    #       sudo apt-get install apt-transport-https --yes
    #       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    #       sudo apt-get update
    #       sudo apt-get install helm -y 
    #       helm version
    
    # # Setup gcloud CLI
    # - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
    #   with:
    #     service_account_key: ${{ secrets.GKE_SA_KEY }}
    #     project_id: ${{ vars.PROJECT_ID }}
    
    # # Get the GKE credentials so we can deploy to the cluster
    # - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
    #   with:
    #     cluster_name: ${{ vars.GKE_CLUSTER_NAME }}
    #     location: ${{ vars.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # - name: Deploy Frontend Application
    #   run: |
    #      helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend


  Deploy-Application-Dev:
    name: '${{ inputs.helm_command}} Frontend Service'
    needs: Verify-Deployment-Dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Dev'
    environment:
     name: Dev_Env
    steps:

    - name: Download Artifacts
      uses: dawidd6/action-download-artifact@v8
      with:
        workflow: frontend_ci.yaml
        github_token: ${{ github.token }}
        repo: ${{ github.repository }}
        name: Application-Artifacts
        path: Application-Artifacts

    - name: Environment
      run: |
          echo "${{ secrets.PROJECT_ID }}"
          echo "${{ vars.GKE_CLUSTER_NAME }}"

    - name: Application Frontend
      run: |
          if [[ ${{ inputs.helm_command}} == "install" ]]
          then 
            echo "helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "upgrade" ]]
          then
            echo "helm upgrade frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "rollback" ]]
          then
            echo "helm rollback frontend --debug --dry-run VERSION_NUMBER"
          else 
            echo "Wrong input" 
          fi 

    # - name: Install Helm
    #   run: |
    #       curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    #       sudo apt-get install apt-transport-https --yes
    #       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    #       sudo apt-get update
    #       sudo apt-get install helm -y 
    #       helm version
    
    # # Setup gcloud CLI
    # - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
    #   with:
    #     service_account_key: ${{ secrets.GKE_SA_KEY }}
    #     project_id: ${{ vars.PROJECT_ID }}
    
    # # Get the GKE credentials so we can deploy to the cluster
    # - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
    #   with:
    #     cluster_name: ${{ vars.GKE_CLUSTER_NAME }}
    #     location: ${{ vars.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # - name: Deploy Frontend Application
    #   run: |
    #      helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend


  Deploy-Application-Test:
    name: '${{ inputs.helm_command}} Frontend Service'
    needs: Verify-Deployment-Test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Test'
    environment:
     name: Test_Env
    steps:

    - name: Download Artifacts
      uses: dawidd6/action-download-artifact@v8
      with:
        workflow: frontend_ci.yaml
        github_token: ${{ github.token }}
        repo: ${{ github.repository }}
        name: Application-Artifacts
        path: Application-Artifacts

    - name: Environment
      run: |
          echo "${{ secrets.PROJECT_ID }}"
          echo "${{ vars.GKE_CLUSTER_NAME }}"

    - name: Application Frontend
      run: |
          if [[ ${{ inputs.helm_command}} == "install" ]]
          then 
            echo "helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "upgrade" ]]
          then
            echo "helm upgrade frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "rollback" ]]
          then
            echo "helm rollback frontend --debug --dry-run VERSION_NUMBER"
          else 
            echo "Wrong input" 
          fi 

    # - name: Install Helm
    #   run: |
    #       curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    #       sudo apt-get install apt-transport-https --yes
    #       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    #       sudo apt-get update
    #       sudo apt-get install helm -y 
    #       helm version
    
    # # Setup gcloud CLI
    # - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
    #   with:
    #     service_account_key: ${{ secrets.GKE_SA_KEY }}
    #     project_id: ${{ vars.PROJECT_ID }}
    
    # # Get the GKE credentials so we can deploy to the cluster
    # - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
    #   with:
    #     cluster_name: ${{ vars.GKE_CLUSTER_NAME }}
    #     location: ${{ vars.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # - name: Deploy Frontend Application
    #   run: |
    #      helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend


  Deploy-Application-Prod:
    name: '${{ inputs.helm_command}} Frontend Service'
    needs: Verify-Deployment-Prod
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/Prod'
    environment:
     name: Prod_Env
    steps:

    - name: Download Artifacts
      uses: dawidd6/action-download-artifact@v8
      with:
        workflow: frontend_ci.yaml
        github_token: ${{ github.token }}
        repo: ${{ github.repository }}
        name: Application-Artifacts
        path: Application-Artifacts

    - name: Environment
      run: |
          echo "${{ secrets.PROJECT_ID }}"
          echo "${{ vars.GKE_CLUSTER_NAME }}"

    - name: Application Frontend
      run: |
          if [[ ${{ inputs.helm_command}} == "install" ]]
          then 
            echo "helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "upgrade" ]]
          then
            echo "helm upgrade frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend"
          elif [[ ${{ inputs.helm_command}} == "rollback" ]]
          then
            echo "helm rollback frontend --debug --dry-run VERSION_NUMBER"
          else 
            echo "Wrong input" 
          fi 

    # - name: Install Helm
    #   run: |
    #       curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
    #       sudo apt-get install apt-transport-https --yes
    #       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    #       sudo apt-get update
    #       sudo apt-get install helm -y 
    #       helm version
    
    # # Setup gcloud CLI
    # - uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
    #   with:
    #     service_account_key: ${{ secrets.GKE_SA_KEY }}
    #     project_id: ${{ vars.PROJECT_ID }}
    
    # # Get the GKE credentials so we can deploy to the cluster
    # - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
    #   with:
    #     cluster_name: ${{ vars.GKE_CLUSTER_NAME }}
    #     location: ${{ vars.GKE_ZONE }}
    #     credentials: ${{ secrets.GKE_SA_KEY }}

    # - name: Deploy Frontend Application
    #   run: |
    #      helm install frontend --debug --dry-run Application-Artifacts/Helm-Charts/frontend
